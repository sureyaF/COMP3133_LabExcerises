'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _graphql = require('graphql');

var _base = require('./base');

var _base2 = _interopRequireDefault(_base);

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* flow */


/**
 * String scalar type that takes in string data.
 * By itself, it is essentially the `GraphQLString` type.
 */
var DateScalar = function (_Base) {
  _inherits(DateScalar, _Base);

  function DateScalar() {
    _classCallCheck(this, DateScalar);

    return _possibleConstructorReturn(this, (DateScalar.__proto__ || Object.getPrototypeOf(DateScalar)).apply(this, arguments));
  }

  _createClass(DateScalar, [{
    key: 'create',
    value: function create() {
      var coerce = (0, _utils2.default)([Boolean].concat(_toConsumableArray(this._func)));
      this.serialize = coerce;
      this.parseValue = coerce;
      this.parseLiteral = function (ast) {
        return ast.kind === _graphql.Kind.BOOLEAN ? coerce(ast.value) : null;
      };
      return _get(DateScalar.prototype.__proto__ || Object.getPrototypeOf(DateScalar.prototype), 'create', this).call(this);
    }
  }]);

  return DateScalar;
}(_base2.default);

exports.default = DateScalar;